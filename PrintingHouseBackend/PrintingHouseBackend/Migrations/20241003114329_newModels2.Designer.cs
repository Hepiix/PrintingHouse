// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrintingHouseBackend.Data;

#nullable disable

namespace PrintingHouseBackend.Migrations
{
    [DbContext(typeof(PrintingHouseContext))]
    [Migration("20241003114329_newModels2")]
    partial class newModels2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PrintingHouseBackend.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "New York",
                            Company = "Doe Designs",
                            Country = "USA",
                            Email = "john.doe@doedesigns.com",
                            Name = "John",
                            PhoneNumber = "+1-123-456-7890",
                            PostalCode = "10001",
                            State = "NY",
                            StreetAddress = "123 Main St",
                            Surname = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            City = "Los Angeles",
                            Company = "Smith Printing Co.",
                            Country = "USA",
                            Email = "jane.smith@smithprinting.com",
                            Name = "Jane",
                            PhoneNumber = "+1-987-654-3210",
                            PostalCode = "90001",
                            State = "CA",
                            StreetAddress = "456 Elm St",
                            Surname = "Smith"
                        },
                        new
                        {
                            Id = 3,
                            City = "Miami",
                            Company = "Gonzalez Graphics",
                            Country = "USA",
                            Email = "maria.gonzalez@gonzalezgraphics.com",
                            Name = "Maria",
                            PhoneNumber = "+1-555-123-4567",
                            PostalCode = "33101",
                            State = "FL",
                            StreetAddress = "789 Oak St",
                            Surname = "Gonzalez"
                        },
                        new
                        {
                            Id = 4,
                            City = "London",
                            Country = "UK",
                            Email = "liam.brown@example.co.uk",
                            Name = "Liam",
                            PhoneNumber = "+44-20-7946-0958",
                            PostalCode = "SW1A 2AA",
                            State = "England",
                            StreetAddress = "10 Downing Street",
                            Surname = "Brown"
                        },
                        new
                        {
                            Id = 5,
                            City = "Sydney",
                            Company = "Taylor Marketing",
                            Country = "Australia",
                            Email = "emily.taylor@taylormarketing.au",
                            Name = "Emily",
                            PhoneNumber = "+61-2-9374-4000",
                            PostalCode = "2000",
                            State = "NSW",
                            StreetAddress = "100 George St",
                            Surname = "Taylor"
                        });
                });

            modelBuilder.Entity("PrintingHouseBackend.Models.JobDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ColorMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dimensions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaperType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pattern")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrintSides")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("JobsDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorMode = "Full Color",
                            Dimensions = "3.5x2 inches",
                            Name = "Business Cards",
                            PaperType = "Glossy",
                            Pattern = "BC-001",
                            PrintSides = "Double",
                            Quantity = 500,
                            Status = "Pending",
                            TotalPrice = 100.00m,
                            UnitPrice = 0.20m
                        },
                        new
                        {
                            Id = 2,
                            ColorMode = "Full Color",
                            Dimensions = "8.5x11 inches",
                            Name = "Flyers",
                            PaperType = "Matte",
                            Pattern = "FL-002",
                            PrintSides = "Single",
                            Quantity = 1000,
                            Status = "In Progress",
                            TotalPrice = 150.00m,
                            UnitPrice = 0.15m
                        },
                        new
                        {
                            Id = 3,
                            ColorMode = "Full Color",
                            Dimensions = "18x24 inches",
                            Name = "Posters",
                            PaperType = "Satin",
                            Pattern = "PO-003",
                            PrintSides = "Single",
                            Quantity = 200,
                            Status = "Completed",
                            TotalPrice = 500.00m,
                            UnitPrice = 2.50m
                        },
                        new
                        {
                            Id = 4,
                            ColorMode = "Full Color",
                            Dimensions = "8.5x11 inches",
                            Name = "Brochures",
                            PaperType = "Glossy",
                            Pattern = "BR-004",
                            PrintSides = "Double",
                            Quantity = 300,
                            Status = "Pending",
                            TotalPrice = 300.00m,
                            UnitPrice = 1.00m
                        },
                        new
                        {
                            Id = 5,
                            ColorMode = "Full Color",
                            Dimensions = "4x4 inches",
                            Name = "Stickers",
                            PaperType = "Vinyl",
                            Pattern = "ST-005",
                            PrintSides = "Single",
                            Quantity = 1000,
                            Status = "In Progress",
                            TotalPrice = 500.00m,
                            UnitPrice = 0.50m
                        });
                });

            modelBuilder.Entity("PrintingHouseBackend.Models.JobOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobDetailsId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("OrderDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("JobDetailsId");

                    b.ToTable("JobsOrders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            DeliveryMethod = "Courier",
                            JobDetailsId = 1,
                            OrderDate = new DateOnly(2024, 9, 20),
                            Status = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            DeliveryMethod = "Self Pickup",
                            JobDetailsId = 2,
                            OrderDate = new DateOnly(2024, 9, 21),
                            Status = "In Progress"
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3,
                            DeliveryMethod = "Courier",
                            JobDetailsId = 3,
                            OrderDate = new DateOnly(2024, 9, 22),
                            Status = "Completed"
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 4,
                            DeliveryMethod = "Courier",
                            JobDetailsId = 4,
                            OrderDate = new DateOnly(2024, 9, 23),
                            Status = "Pending"
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 5,
                            DeliveryMethod = "Courier",
                            JobDetailsId = 5,
                            OrderDate = new DateOnly(2024, 9, 24),
                            Status = "In Progress"
                        });
                });

            modelBuilder.Entity("PrintingHouseBackend.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UsersData");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "jeremy20110@yahoo.com",
                            FirstName = "Jeri",
                            LastName = "Medlin",
                            Password = "123"
                        },
                        new
                        {
                            Id = 2,
                            Email = "heber_barte@gmail.com",
                            FirstName = "Cynthia",
                            LastName = "Chamberlain",
                            Password = "123"
                        },
                        new
                        {
                            Id = 3,
                            Email = "bettie1995@hotmail.com",
                            FirstName = "Justin",
                            LastName = "Smith",
                            Password = "123"
                        });
                });

            modelBuilder.Entity("PrintingHouseBackend.Models.JobOrder", b =>
                {
                    b.HasOne("PrintingHouseBackend.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrintingHouseBackend.Models.JobDetails", "JobDetails")
                        .WithMany()
                        .HasForeignKey("JobDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("JobDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
