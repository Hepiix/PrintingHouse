@page "/editcustomers"
@page "/editcustomers/{id:int}"

@inject NavigationManager NavigationManager;
@inject CustomersClient CustomersClient
@rendermode InteractiveServer


<h3>@title</h3>

@if(customer is null)
{
    <p>Loading...</p>
}
else
{
    <div>
    <EditForm Model="@customer"
        FormName="editCustomer"
        OnValidSubmit="HandleSubmitAsync"
        Enhance>
        <DataAnnotationsValidator />
        <ValidationSummary />
        <label for="name">Name</label>
        <InputText class="form-control" id="name" @bind-Value="customer.Name" />
        
        <label for="surname">Surname</label>
        <InputText class="form-control" id="surname" @bind-Value="customer.Surname" />

        <label for="company">Company</label>
        <InputText class="form-control" id="company" @bind-Value="customer.Company" />

        <label for="phoneNumber">Phone Number</label>
        <InputText class="form-control" id="phoneNumber" @bind-Value="customer.PhoneNumber" />
        <br />
        <button class="btn btn-success" type="submit">@submitButton</button>

        <a role="button" class="btn btn-danger" href="/customers">Cancel</a>

    </EditForm>
    </div>
}

@code {
    [Parameter]
    public int? Id { get; set; }

    [SupplyParameterFromForm]
    private Customer? customer { get; set; }

    private string title = string.Empty;
    private string submitButton = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        if (customer is not null)
            return;

        if (Id is not null)
        {
            title = "Edit Customer";
            submitButton = "Save changes";
            customer = await CustomersClient.GetCustomerAsync(Id.Value);
        }
        else
        {
            customer = new()
                {
                    Name = string.Empty,
                    Surname = string.Empty,
                    Company = string.Empty,
                    PhoneNumber = string.Empty
                };
            title = "New Customer";
            submitButton = "Submit";
        }
    }

    private async Task HandleSubmitAsync()
    {
        if (Id is null)
            await CustomersClient.AddCustomerAsync(customer);
        else
        {
            customer.Id = Id.Value;
            await CustomersClient.UpdateCustomerAsync(customer);
        }

        NavigationManager.NavigateTo("/customers");
    }
}