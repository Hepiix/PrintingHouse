@page "/jobsdetails"
@inject JobDetailsClient client
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<h3>JobsDetails</h3>

@if(jobsDetails is null)
{
    <h1>Loading...</h1>
}
else
{
    <table class="table table-dark table-hover table-bordered caption-top table-align-middle">
        <caption>List of all job details</caption>
        <thead class="table-light align-middle">
            <th class="text-center" style="width: 5%;">Id</th>
            <th>Name</th>
            <th>Pattern</th>
            <th class="text-center" style="width: 12%;"><a href="editjobdetails/" class="btn btn-success"><i class="bi bi-person-plus"></i>Add new</a></th>
        </thead>
        <tbody class="table-group-divider">
            @foreach (var jobDetails in jobsDetails)
            {
                <tr class="align-middle">
                    <td class="text-center">@jobDetails.Id</td>
                    <td>@jobDetails.Name</td>
                    <td>@jobDetails.Pattern</td>
                    <td class="text-center"><a href="editjobdetails/@jobDetails.Id" class="btn btn-primary"><i class="bi bi-pencil"></i></a>
                        <button class="btn btn-danger"
                        data-bs-toggle="modal"
                        data-bs-target="@GetDeleteModalId(jobDetails)"><i class="bi bi-trash3" /></button>
                        <DeleteJobDetails jobDetails="@jobDetails" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    JobDetails[] jobsDetails = [];

    protected override async Task OnInitializedAsync()
    {
        jobsDetails = await client.GetJobsDetailsAsync();
    }

    private string GetDeleteModalId(JobDetails jobDetails) => $"#{DeleteJobDetails.GetModalId(jobDetails)}";
}
