@inject JobOrderClient JobOrderClient
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<div class="modal fade" id="@GetModalId(jobOrder)" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title text-danger fs-5" id="exampleModalLabel">Do you want to delete @jobOrder.CustomerName @jobOrder.JobName?</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal" @onclick="@DeleteAsync">Delete</button>
            </div>
        </div>
    </div>
</div>


@code {
    [Parameter]
    public JobOrderViewModel? jobOrder { get; set; }

    public static string GetModalId(JobOrderViewModel? jobOrder)
    {
        ArgumentNullException.ThrowIfNull(jobOrder);
        return $"deleteModal-{jobOrder.Id}";
    }

    private async Task DeleteAsync()
    {
        await JobOrderClient.DeleteJobOrderAsync(jobOrder!.Id);
        NavigationManager.Refresh();
    }
}
