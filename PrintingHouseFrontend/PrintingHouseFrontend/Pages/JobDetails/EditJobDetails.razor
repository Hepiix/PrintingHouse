@page "/editjobdetails"
@page "/editjobdetails/{id:int}"
@inject JobDetailsClient client
@inject NavigationManager NavigationManager


<h3>@title</h3>

@if (!isAuthorized)
{
    <h1>Unauthorized, please <a href="/login">login</a>.</h1>
}
else
{
    @if (jobDetails is null)
    {
        <p>Loading...</p>
    }
    else
    {
        <EditForm Model="@jobDetails"
                  FormName="editJobDetails"
                  OnValidSubmit="@HandleSubmitAsync"
                  Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary />
            <label for="name">Name</label>
            <InputText class="form-control" id="name" @bind-Value="@jobDetails.Name" />

            <label for="pattern">Pattern</label>
            <InputText class="form-control" id="pattern" @bind-Value="@jobDetails.Pattern" />

            <label for="paperType">Paper Type</label>
            <InputSelect class="form-control" id="paperType" @bind-Value="@jobDetails.PaperType">
                <option value="">--- Select ---</option>
                <option value="Glossy">Glossy</option>
                <option value="Matte">Matte</option>
                <option value="Satin">Satin</option>
                <option value="Vinyl">Vinyl</option>
            </InputSelect>

            <label for="dimensions">Dimensions</label>
            <InputSelect class="form-control" id="dimensions" @bind-Value="@jobDetails.Dimensions">
                <option value="">--- Select ---</option>
                <option value="3.5x2 inches">3.5x2 inches</option>
                <option value="8.5x11 inches">8.5x11 inches</option>
                <option value="18x24 inches">18x24 inches</option>
                <option value="4x4 inches">4x4 inches</option>
            </InputSelect>

            <label for="colorMode">Color Mode</label>
            <InputSelect class="form-control" id="colorMode" @bind-Value="@jobDetails.ColorMode">
                <option value="">--- Select ---</option>
                <option value="Full Color">Full Color</option>
                <option value="Duotone">Duotone</option>
                <option value="Grayscale">Grayscale</option>
            </InputSelect>

            <label for="printSides">Print Sides</label>
            <InputSelect class="form-control" id="printSides" @bind-Value="@jobDetails.PrintSides">
                <option value="">--- Select ---</option>
                <option value="Single">Single</option>
                <option value="Double">Double</option>
            </InputSelect>

            <label for="unitPrice">Unit Price</label>
            <InputNumber class="form-control" id="unitPrice" @bind-Value="@jobDetails.UnitPrice" />

            <br />
            <button class="btn btn-success" type="submit">@submitButton</button>
            <a class="btn btn-danger" role="button" href="/jobsdetails">Cancel</a>
        </EditForm>
    }
}


@code {
    [Parameter]
    public int? Id { get; set; }
    [SupplyParameterFromForm]
    private JobDetails? jobDetails { get; set; }
    private string title = string.Empty;
    private string submitButton = string.Empty;
    bool isAuthorized = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            if (jobDetails is not null)
                return;

            if (Id is not null)
            {
                title = "Edit Job Details";
                submitButton = "Save changes";
                try
                {
                    isAuthorized = true;
                    jobDetails = await client.GetJobDetailsAsync(Id.Value);
                }
                catch
                {
                    isAuthorized = false;
                }
            }
            else
            {
                isAuthorized = true;
                jobDetails = new()
                    {
                        Name = string.Empty,
                        Pattern = string.Empty,
                        PaperType = string.Empty,
                        Dimensions = string.Empty,
                        ColorMode = string.Empty,
                        PrintSides = string.Empty,
                        UnitPrice = 0,
                    };
                title = "New Job Details";
                submitButton = "Submit";
            }
        }
        StateHasChanged();
    }

    private async Task HandleSubmitAsync()
    {
        if (Id is null)
            await client.AddJobDetailsAsync(jobDetails);
        else
        {
            jobDetails.Id = Id.Value;
            await client.UpdateJobDetailsAsync(jobDetails);
        }
        NavigationManager.NavigateTo("/jobsdetails");
    }
}
