@page "/joborders"
@inject JobOrderClient JobOrderClient
@inject NavigationManager NavigationManager


@if (!isAuthorized)
{
    <h1>Unauthorized, please <a href="/login">login</a>.</h1>
}
else
{
    @if (jobOrders is null)
    {
        <h1>Loading...</h1>
    }
    else
    {
        <table class="table table-dark table-hover table-bordered caption-top table-align-middle">
            <caption>List of all job orders</caption>
            <thead class="table-light align-middle">
            <th class="text-center" style="width: 5%;">Id</th>
            <th>Customer Name</th>
            <th>Job Name</th>
            <th class="text-center">Order Date</th>
            <th>Quantity</th>
            <th>Total Price</th>
            <th>Delivery Method</th>
            <th class="text-center">Status</th>
            <th class="text-center" style="width: 12%;"><a href="newjoborder/" class="btn btn-success"><i class="bi bi-person-plus"></i> Add new</a></th>
            </thead>
            <tbody>
                @foreach (JobOrderViewModel jobOrder in jobOrders)
                {
                    <tr class="align-middle">
                        <td class="text-center">@jobOrder.Id</td>
                        <td>@jobOrder.CustomerName</td>
                        <td>@jobOrder.JobName</td>
                        <td class="text-center">@jobOrder.OrderDate</td>
                        <td>@jobOrder.Quantity</td>
                        <td>@jobOrder.TotalPrice</td>
                        <td>@jobOrder.DeliveryMethod</td>
                        @if (jobOrder.Status == "Pending")
                        {
                            <td class="text-warning">@jobOrder.Status</td>
                        }
                        else if (jobOrder.Status == "In Progress")
                        {
                            <td class="text-primary">@jobOrder.Status</td>
                        }
                        else if (jobOrder.Status == "Completed")
                        {
                            <td class="text-success">@jobOrder.Status</td>
                        }
                        else
                        {
                            <td class="text-danger">Error</td>
                        }
                        <td class="text-center">
                            <a href="editjoborder/@jobOrder.Id" class="btn btn-primary"><i class="bi bi-pencil"></i></a>
                            <button class="btn btn-danger"
                                    data-bs-toggle="modal"
                                    data-bs-target="@GetDeleteModalId(jobOrder)">
                                <i class="bi bi-trash3"></i>
                            </button>
                            <DeleteJobOrder jobOrder="jobOrder" />
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
}

@code {
    JobOrderViewModel[] jobOrders = [];
    bool isAuthorized = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                isAuthorized = true;
                jobOrders = await JobOrderClient.GetJobOrdersAsync();
                StateHasChanged();
            }
            catch
            {
                isAuthorized = false;
            }
        }
    }

    private string GetDeleteModalId(JobOrderViewModel jobOrder) => $"#{DeleteJobOrder.GetModalId(jobOrder)}";
}
